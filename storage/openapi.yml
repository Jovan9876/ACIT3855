openapi: 3.0.0
servers:
  - url: "http://localhost:8090"
info:
  description: This API recieves events from smart watches
  version: "1.0.0"
  title: Storage API
  contact:
    email: jsandhu162@my.bcit.ca
tags:
  - name: devices
    description: Operations available to smart watches
paths:
  /read/steps:
    get:
      tags:
        - devices
      summary: Gets new step information
      operationId: app.getStepInfo
      description: Gets step information after timestamp
      parameters:
        - name: timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: "2022-10-08 20:30:12.235577"
      responses:
        '200':
          description: Successfully returned a list of step information events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/stepInformation"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /read/weight:
    get:
      tags:
        - devices
      summary: Gets new weight information
      operationId: app.getWeightInfo
      description: Gets weight information after timestamp
      parameters:
        - name: timestamp
          in: query
          description: Limits the number of items on a page
          schema:
            type: string
            format: date-time
            example: "2022-10-08 20:38:12.235577"
      responses:
        '200':
          description: Successfully returned a list of weight information events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/weightInformation"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    stepInformation:
      type: object
      required:
        - userID
        - numSteps
        - totalDistance
        - elevation
        - floorsClimbed
        - timestamp
        - traceID
      properties:
        userID:
          type: integer
          example: 1
        numSteps:
          type: integer
          example: 13898
        totalDistance:
          type: integer
          example: 12
          #(km)
        elevation:
          type: integer
          example: 3
          #(ft)
        floorsClimbed:
          type: integer
          example: 14
        timestamp:
          type: string
          format: date-time
          example: "2022-09-22 14:31:26.270075"
        traceID:
          type: string
          format: uuid
          example: "4445826b-9c51-48d6-a380-0bab2d9524fc"
    weightInformation:
      required:
        - userID
        - caloriesBurned
        - weightLost
        - newWeight
        - fitnessScore
        - timestamp
        - traceID
      properties:
        userID:
          type: integer
          example: 1
        caloriesBurned:
          type: integer
          example: 448
        weightLost:
          type: integer
          example: 30
          #(lbs)
        newWeight:
          type: integer
          example: 148
          #(lbs)
        fitnessScore:
          type: integer
          example: 1
          # 1 (poor), 2 (okay), 3 (good), 4 (excellent)
        timestamp:
          type: string
          format: date-time
          example: "2022-09-22 14:31:26.270075"
        traceID:
          type: string
          format: uuid
          example: "4445826b-9c51-48d6-a380-0bab2d9524fc"
